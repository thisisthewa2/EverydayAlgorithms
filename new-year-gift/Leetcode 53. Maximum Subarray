"""
ref:
https://sustainable-dev.tistory.com/23

Kadane Algorithm
localMaximum = max(A[i],(A[i] + local_maximum[i-1])) 
"""
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        localMax = nums[0]
        globalMax = nums[0]

        for i in range(1,len(nums)):
            localMax = max(localMax+nums[i],nums[i]) 
            globalMax = max(globalMax,localMax)
        return globalMax
